name: release

on:
  push:
    paths-ignore:
      - "**/README.md"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    # branches:
    #   - "main"

env:
  CARGO_TERM_COLOR: always
  # RUST_BINARY_NAME: backend

permissions:
  contents: write

jobs:
  build-homeland:
    name: build-homeland
    # defaults:
    #   run:
    #     shell: bash
    #     # working-directory: backend
    strategy:
      fail-fast: false
      matrix:
        # You can add more, for any target you'd like!
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            toolchain: stable
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-gnu
            toolchain: stable
    
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: get hash
        uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        if: ${{ steps.release-label.outputs.level != null }}

      - name: Check Version
        run: |
          echo "short version hash => ${{ steps.short-sha.outputs.sha }}"
          echo "get-latest-tag ${{ steps.get-latest-tag.outputs.tag }}"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: Install Rust
        # Or @nightly if you want
        uses: dtolnay/rust-toolchain@v1
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
      
      - uses: Swatinem/rust-cache@v2

      - name: install frontend dependencies
        run: pnpm install

      - name: Build # bugs with working-directory see: https://github.com/actions-rs/cargo/issues/86
        run: |
          cd backend && cargo build --verbose --release --target ${{ matrix.target }}
          cd ../frontend && npm run build
          cd ../

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          # binary_name=${{ env.RUST_BINARY_NAME }}

          dirname="homeland-${{ steps.get-latest-tag.outputs.tag }}-${{ env.SHA }}-${{ matrix.target }}"
          mkdir "$dirname"
          mkdir "$dirname/backend"
          mkdir "$dirname/frontend"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "backend/target/${{ matrix.target }}/release/backend.exe" "$dirname/backend"
          else
            mv "backend/target/${{ matrix.target }}/release/backend" "$dirname/backend"
          fi

          # add more resource to archive
          mv backend/.env "$dirname/backend"
          mv frontend/serve "$dirname/frontend"
          mv frontend/dist "$dirname/frontend"
          mv frontend/package.json "$dirname/frontend"
          mv ecosystem.config.cjs "$dirname"

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi
      - name: Check Release archive
        run: |
          echo "release archive at: ${{ env.ASSET }}"

      - name: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: homeland-artifact
          retention-days: 5
          if-no-files-found: error
          path: ${{ env.ASSET }}

  archive:
    name: archive
    needs:
      - build-homeland
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: download artifact backend
        uses: actions/download-artifact@v3
        with:
          name: homeland-artifact
          path: |
            ${{ github.workspace }}/

      - name: Display structure of downloaded files
        run: |
          ls -R ${{ github.workspace }}/

      - uses: softprops/action-gh-release@master
        name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        with:
          ## with permissions to create releases in the other repo
          token: "${{ secrets.GITHUB_TOKEN }}"
          # body_path: ${{ github.workspace }}-CHANGELOG.txt
          prerelease: true
          # https://github.com/isaacs/node-glob
          files: |
            *.zip
            *.tar.gz
